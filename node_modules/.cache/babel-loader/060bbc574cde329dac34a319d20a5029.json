{"ast":null,"code":"var _jsxFileName = \"/home/shebin/Desktop/allen/src/admin/AddProduction.js\";\nimport React, { useState } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link } from \"react-router-dom\";\nimport { createProduction } from \"./helper/adminapicall\";\n\nconst AddProduction = ({\n  match\n}) => {\n  const [values, setValues] = useState({\n    name: \"\",\n    success: \"\",\n    error: \"\"\n  });\n  const {\n    name,\n    success,\n    error\n  } = values;\n  const tokrole = JSON.parse(localStorage.getItem(\"jwt\"));\n  const token = tokrole.access_token;\n  const companyId = match.params.companyId;\n\n  const goBack = () => React.createElement(\"div\", {\n    className: \"mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"btn btn-sm btn-success mb-3\",\n    to: `/admin/company/dashboard/${companyId}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Company Dashboard\"));\n\n  const handleChange = name => event => {\n    setValues({ ...values,\n      error: \"\",\n      name: event.target.value\n    });\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values,\n      error: \"\",\n      success: \"\"\n    }); //backend request fired\n\n    createProduction(token, companyId, {\n      name\n    }).then(data => {\n      if (data.error) {\n        setValues({ ...values,\n          error: data.error\n        });\n      } else {\n        setValues({ ...values,\n          name: \"\",\n          error: \"\",\n          success: true\n        });\n      }\n    });\n  };\n\n  const successMessage = () => {\n    if (success) {\n      return React.createElement(\"h4\", {\n        className: \"text-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Production created successfully\");\n    }\n  };\n\n  const warningMessage = () => {\n    if (error) {\n      return React.createElement(\"h4\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Failed to Create Production\");\n    }\n  };\n\n  const addProductionForm = () => React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Enter the Production\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control my-3\",\n    onChange: handleChange(\"name\"),\n    value: name,\n    autoFocus: true,\n    required: true,\n    placeholder: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: onSubmit,\n    className: \"btn btn-outline-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Create Production\")));\n\n  return React.createElement(Base, {\n    title: \"Create a Production here\",\n    description: \"Add a new Production for the Company\",\n    className: \"container bg-info p-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row bg-white rounded\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-8 offset-md-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, successMessage(), warningMessage(), addProductionForm(), goBack())));\n};\n\nexport default AddProduction;","map":{"version":3,"sources":["/home/shebin/Desktop/allen/src/admin/AddProduction.js"],"names":["React","useState","Base","Link","createProduction","AddProduction","match","values","setValues","name","success","error","tokrole","JSON","parse","localStorage","getItem","token","access_token","companyId","params","goBack","handleChange","event","target","value","onSubmit","preventDefault","then","data","successMessage","warningMessage","addProductionForm"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link } from \"react-router-dom\";\nimport { createProduction } from \"./helper/adminapicall\";\n\n\nconst AddProduction = ({match}) => {\n  const [values, setValues] = useState({\n      name:\"\",\n      success:\"\",\n      error:\"\"\n  })\n\n  const {name,success,error}=values;\n\n  const tokrole=JSON.parse(localStorage.getItem(\"jwt\"));\n  const token=tokrole.access_token;\n  const companyId=match.params.companyId;\n\n  const goBack = () => (\n    <div className=\"mt-5\">\n      <Link className=\"btn btn-sm btn-success mb-3\" to={`/admin/company/dashboard/${companyId}`}>\n        Company Dashboard\n      </Link>\n    </div>\n  );\n\n  const handleChange = name=> event => {\n    setValues({ ...values, error: \"\", name: event.target.value });\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values, error: \"\", success: \"\" });\n\n    //backend request fired\n    createProduction(token,companyId,{name}).then(data => {\n      if (data.error) {\n        setValues({ ...values, error: data.error });\n\n      } else {\n        setValues({\n            ...values,\n            name: \"\",\n            error:\"\",\n            success:true,\n        \n          });\n      }\n    });\n   };\n\n  const successMessage = () => {\n    if (success) {\n      return <h4 className=\"text-success\">Production created successfully</h4>;\n    }\n  };\n\n  const warningMessage = () => {\n    if (error) {\n      return <h4 className=\"text-danger\">Failed to Create Production</h4>;\n    }\n  };\n\n  const addProductionForm = () => (\n    <form>\n      <div className=\"form-group\">\n        <p className=\"lead\">Enter the Production</p>\n        <input\n          type=\"text\"\n          className=\"form-control my-3\"\n          onChange={handleChange(\"name\")}\n          value={name}\n          autoFocus\n          required\n          placeholder=\"\"\n        />\n        <button onClick={onSubmit} className=\"btn btn-outline-info\">\n          Create Production\n        </button>\n      </div>\n    </form>\n  );\n\n  return (\n    <Base\n      title=\"Create a Production here\"\n      description=\"Add a new Production for the Company\"\n      className=\"container bg-info p-4\"\n    >\n      <div className=\"row bg-white rounded\">\n        <div className=\"col-md-8 offset-md-2\">\n          {successMessage()}\n          {warningMessage()}\n          {addProductionForm()}\n          {goBack()}\n        </div>\n      </div>\n    </Base>\n  );\n};\n\nexport default AddProduction;"]},"metadata":{},"sourceType":"module"}