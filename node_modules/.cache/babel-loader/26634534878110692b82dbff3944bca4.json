{"ast":null,"code":"import { API } from \"../../backend\";\n\nconst axios = require('axios');\n\nexport const signup = async user => {\n  return await fetch(`${API}/user/register`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err.message));\n};\nexport const signin = async user => {\n  const {\n    email,\n    password\n  } = user;\n  return await axios.post(`${API}/user/login`, {\n    email,\n    password\n  }, {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    return response.data.access_token;\n  }).catch(error => {\n    return {\n      error: error.response.data.message\n    };\n  });\n}; // export const signin = async(user) => {\n//   return await fetch(`${API}/user/login`, {\n//     method: \"POST\",\n//     headers: {\n//       Accept: \"application/json\",\n//       \"Content-Type\": \"application/json\"\n//     },\n//     body: JSON.stringify(user)\n//   })\n//     .then(response => {\n//       console.log(response);\n//     })\n//     .catch(err => console.log(err));\n// };\n\nexport const authenticate = (data, next) => {\n  if (typeof window !== \"undefined\") {\n    localStorage.setItem(\"jwt\", data);\n    next();\n  }\n};\nexport const signout = next => {\n  if (typeof window !== \"undefined\") {\n    localStorage.removeItem(\"jwt\");\n    next();\n    return fetch(`${API}/signout`, {\n      method: \"GET\"\n    }).then(response => console.log(\"signout success\")).catch(err => console.log(err));\n  }\n};\nexport const isAutheticated = () => {\n  if (typeof window == \"undefined\") {\n    return false;\n  }\n\n  if (localStorage.getItem(\"jwt\")) {\n    return axios.get(`${API}/user`, {\n      headers: {\n        \"auth-token\": localStorage.getItem(\"jwt\")\n      }\n    }).then(response => {\n      const user = response.data.user;\n      return user;\n    }).catch(error => {\n      return error.response.data.message;\n    });\n  }\n};","map":{"version":3,"sources":["/home/shebin/Desktop/allen/src/auth/helper/index.js"],"names":["API","axios","require","signup","user","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","catch","err","console","log","message","signin","email","password","post","data","access_token","error","authenticate","next","window","localStorage","setItem","signout","removeItem","isAutheticated","getItem","get"],"mappings":"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","sourcesContent":["import { API } from \"../../backend\";\n\nconst axios=require('axios');\n\nexport const signup = async(user) => {\n  return await fetch(`${API}/user/register`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body:JSON.stringify(user)\n  })\n    .then(response => {\n      return response.json();\n    })\n    .catch(err => console.log(err.message));\n};\nexport const signin = async(user) => {\nconst {email,password}=user;\n\n return await axios.post(`${API}/user/login`,{email,password},{headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  }})\n.then(response=> {\n return response.data.access_token;\n})\n.catch(error=>{ \n  return{error:error.response.data.message};\n})};\n\n// export const signin = async(user) => {\n//   return await fetch(`${API}/user/login`, {\n//     method: \"POST\",\n//     headers: {\n//       Accept: \"application/json\",\n//       \"Content-Type\": \"application/json\"\n//     },\n//     body: JSON.stringify(user)\n//   })\n//     .then(response => {\n//       console.log(response);\n//     })\n//     .catch(err => console.log(err));\n// };\n\nexport const authenticate = (data, next) => {\n  if (typeof window !== \"undefined\") {\n    localStorage.setItem(\"jwt\", (data));\n    next();\n  }\n};\n\nexport const signout = next => {\n  if (typeof window !== \"undefined\") {\n    localStorage.removeItem(\"jwt\");\n    next();\n\n    return fetch(`${API}/signout`, {\n      method: \"GET\"\n    })\n      .then(response => console.log(\"signout success\"))\n      .catch(err => console.log(err));\n  }\n};\n\nexport const isAutheticated =() => {\n  if (typeof window == \"undefined\") {\n    return false;\n  }\n  if (localStorage.getItem(\"jwt\")) {\n    return axios.get(`${API}/user`,{headers: {\n      \"auth-token\":localStorage.getItem(\"jwt\")\n    }})\n  .then(response=> {\n    const user=response.data.user;\n\n    return (user);\n  \n  })\n  .catch(error=>{ \n    return(error.response.data.message);\n  })}};\n"]},"metadata":{},"sourceType":"module"}