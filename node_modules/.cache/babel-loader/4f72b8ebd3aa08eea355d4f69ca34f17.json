{"ast":null,"code":"var _jsxFileName = \"/home/shebin/Desktop/allen/src/admin/list/taskForm.js\";\nimport React from \"react\";\nimport TaskList from \"./taskList\";\nimport axios from 'axios';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\n\nclass Form extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      taskList: [{\n        index: Math.random(),\n        projectName: \"\",\n        task: \"\",\n        taskNotes: \"\",\n        taskStatus: \"\"\n      }],\n      date: \"\",\n      description: \"\"\n    };\n\n    this.handleChange = e => {\n      if ([\"projectName\", \"task\", \"taskNotes\", \"taskStatus\"].includes(e.target.name)) {\n        let taskList = [...this.state.taskList];\n        taskList[e.target.dataset.id][e.target.name] = e.target.value;\n      } else {\n        this.setState({\n          [e.target.name]: e.target.value\n        });\n      }\n    };\n\n    this.addNewRow = e => {\n      this.setState(prevState => ({\n        taskList: [...prevState.taskList, {\n          index: Math.random(),\n          projectName: \"\",\n          task: \"\",\n          taskNotes: \"\",\n          taskStatus: \"\"\n        }]\n      }));\n    };\n\n    this.deteteRow = index => {\n      this.setState({\n        taskList: this.state.taskList.filter((s, sindex) => index !== sindex)\n      }); // const taskList1 = [...this.state.taskList];\n      // taskList1.splice(index, 1);\n      // this.setState({ taskList: taskList1 });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (this.state.date === '' || this.state.description === '') {\n        NotificationManager.warning(\"Please Fill up Required Field . Please check Task and Date Field\");\n        return false;\n      }\n\n      for (var i = 0; i < this.state.taskList.length; i++) {\n        if (this.state.taskList[i].projectName === '' || this.state.taskList[i].task === '') {\n          NotificationManager.warning(\"Please Fill up Required Field.Please Check Project name And Task Field\");\n          return false;\n        }\n      }\n\n      let data = {\n        formData: this.state,\n        userData: localStorage.getItem('user')\n      };\n      axios.defaults.headers.common[\"Authorization\"] = localStorage.getItem('token');\n      axios.post(\"http://localhost:9000/api/task\", data).then(res => {\n        if (res.data.success) NotificationManager.success(res.data.msg);\n      }).catch(error => {\n        if (error.response.status && error.response.status === 400) NotificationManager.error(\"Bad Request\");else NotificationManager.error(\"Something Went Wrong\");\n        this.setState({\n          errors: error\n        });\n      });\n    };\n  }\n\n  clickOnDelete(record) {\n    this.setState({\n      taskList: this.state.taskList.filter(r => r !== record)\n    });\n  }\n\n  render() {\n    let {\n      taskList\n    } = this.state; //let { notes, date, description, taskList } = this.state\n\n    return React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(NotificationContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        marginTop: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Add Your Daily Task\"), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Date\"), React.createElement(\"input\", {\n      type: \"date\",\n      name: \"date\",\n      id: \"date\",\n      className: \"form-control\",\n      placeholder: \"Enter Date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"textarea\", {\n      name: \"description\",\n      id: \"description\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })))), React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      className: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Project Name\"), React.createElement(\"th\", {\n      className: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Task\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Notes\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Status\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(TaskList, {\n      add: this.addNewRow,\n      delete: this.clickOnDelete.bind(this),\n      taskList: taskList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(\"tfoot\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      colSpan: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.addNewRow,\n      type: \"button\",\n      className: \"btn btn-primary text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-plus-circle\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }))))))), React.createElement(\"div\", {\n      className: \"card-footer text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \" \", React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Submit\")))), React.createElement(\"div\", {\n      className: \"col-sm-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/home/shebin/Desktop/allen/src/admin/list/taskForm.js"],"names":["React","TaskList","axios","NotificationContainer","NotificationManager","Form","Component","state","taskList","index","Math","random","projectName","task","taskNotes","taskStatus","date","description","handleChange","e","includes","target","name","dataset","id","value","setState","addNewRow","prevState","deteteRow","filter","s","sindex","handleSubmit","preventDefault","warning","i","length","data","formData","userData","localStorage","getItem","defaults","headers","common","post","then","res","success","msg","catch","error","response","status","errors","clickOnDelete","record","r","render","marginTop","bind"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,qBAAT,EAAgCC,mBAAhC,QAA2D,qBAA3D;;AACA,MAAMC,IAAN,SAAmBL,KAAK,CAACM,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAE/BC,KAF+B,GAEvB;AACJC,MAAAA,QAAQ,EAAE,CAAC;AAAEC,QAAAA,KAAK,EAAEC,IAAI,CAACC,MAAL,EAAT;AAAwBC,QAAAA,WAAW,EAAE,EAArC;AAAyCC,QAAAA,IAAI,EAAE,EAA/C;AAAmDC,QAAAA,SAAS,EAAE,EAA9D;AAAkEC,QAAAA,UAAU,EAAE;AAA9E,OAAD,CADN;AAEJC,MAAAA,IAAI,EAAE,EAFF;AAGJC,MAAAA,WAAW,EAAE;AAHT,KAFuB;;AAAA,SAS/BC,YAT+B,GASfC,CAAD,IAAO;AAClB,UAAI,CAAC,aAAD,EAAgB,MAAhB,EAAwB,WAAxB,EAAqC,YAArC,EAAmDC,QAAnD,CAA4DD,CAAC,CAACE,MAAF,CAASC,IAArE,CAAJ,EAAgF;AAC5E,YAAId,QAAQ,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,QAAf,CAAf;AACAA,QAAAA,QAAQ,CAACW,CAAC,CAACE,MAAF,CAASE,OAAT,CAAiBC,EAAlB,CAAR,CAA8BL,CAAC,CAACE,MAAF,CAASC,IAAvC,IAA+CH,CAAC,CAACE,MAAF,CAASI,KAAxD;AACH,OAHD,MAGO;AACH,aAAKC,QAAL,CAAc;AAAE,WAACP,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASI;AAA5B,SAAd;AACH;AACJ,KAhB8B;;AAAA,SAiB/BE,SAjB+B,GAiBlBR,CAAD,IAAO;AACf,WAAKO,QAAL,CAAeE,SAAD,KAAgB;AAC1BpB,QAAAA,QAAQ,EAAE,CAAC,GAAGoB,SAAS,CAACpB,QAAd,EAAwB;AAAEC,UAAAA,KAAK,EAAEC,IAAI,CAACC,MAAL,EAAT;AAAwBC,UAAAA,WAAW,EAAE,EAArC;AAAyCC,UAAAA,IAAI,EAAE,EAA/C;AAAmDC,UAAAA,SAAS,EAAE,EAA9D;AAAkEC,UAAAA,UAAU,EAAE;AAA9E,SAAxB;AADgB,OAAhB,CAAd;AAGH,KArB8B;;AAAA,SAuB/Bc,SAvB+B,GAuBlBpB,KAAD,IAAW;AACnB,WAAKiB,QAAL,CAAc;AACVlB,QAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAAX,CAAoBsB,MAApB,CAA2B,CAACC,CAAD,EAAIC,MAAJ,KAAevB,KAAK,KAAKuB,MAApD;AADA,OAAd,EADmB,CAInB;AACA;AACA;AACH,KA9B8B;;AAAA,SA+B/BC,YA/B+B,GA+Bfd,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACe,cAAF;;AACA,UAAG,KAAK3B,KAAL,CAAWS,IAAX,KAAkB,EAAlB,IAAwB,KAAKT,KAAL,CAAWU,WAAX,KAAyB,EAApD,EACA;AACIb,QAAAA,mBAAmB,CAAC+B,OAApB,CAA4B,kEAA5B;AACA,eAAO,KAAP;AACH;;AACD,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAK7B,KAAL,CAAWC,QAAX,CAAoB6B,MAAlC,EAAyCD,CAAC,EAA1C,EACA;AACQ,YAAG,KAAK7B,KAAL,CAAWC,QAAX,CAAoB4B,CAApB,EAAuBxB,WAAvB,KAAqC,EAArC,IAA2C,KAAKL,KAAL,CAAWC,QAAX,CAAoB4B,CAApB,EAAuBvB,IAAvB,KAA8B,EAA5E,EACA;AACIT,UAAAA,mBAAmB,CAAC+B,OAApB,CAA4B,wEAA5B;AACA,iBAAO,KAAP;AACH;AACR;;AACD,UAAIG,IAAI,GAAG;AAAEC,QAAAA,QAAQ,EAAE,KAAKhC,KAAjB;AAAwBiC,QAAAA,QAAQ,EAAEC,YAAY,CAACC,OAAb,CAAqB,MAArB;AAAlC,OAAX;AACAxC,MAAAA,KAAK,CAACyC,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDJ,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAjD;AACAxC,MAAAA,KAAK,CAAC4C,IAAN,CAAW,gCAAX,EAA6CR,IAA7C,EAAmDS,IAAnD,CAAwDC,GAAG,IAAI;AAC3D,YAAGA,GAAG,CAACV,IAAJ,CAASW,OAAZ,EAAqB7C,mBAAmB,CAAC6C,OAApB,CAA4BD,GAAG,CAACV,IAAJ,CAASY,GAArC;AACxB,OAFD,EAEGC,KAFH,CAESC,KAAK,IAAI;AACd,YAAGA,KAAK,CAACC,QAAN,CAAeC,MAAf,IAAyBF,KAAK,CAACC,QAAN,CAAeC,MAAf,KAAwB,GAApD,EACAlD,mBAAmB,CAACgD,KAApB,CAA0B,aAA1B,EADA,KAEKhD,mBAAmB,CAACgD,KAApB,CAA0B,sBAA1B;AACL,aAAK1B,QAAL,CAAc;AAAE6B,UAAAA,MAAM,EAAEH;AAAV,SAAd;AACH,OAPD;AAQH,KAxD8B;AAAA;;AA0D/BI,EAAAA,aAAa,CAACC,MAAD,EAAS;AAClB,SAAK/B,QAAL,CAAc;AACVlB,MAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAAX,CAAoBsB,MAApB,CAA2B4B,CAAC,IAAIA,CAAC,KAAKD,MAAtC;AADA,KAAd;AAGH;;AAEDE,EAAAA,MAAM,GAAG;AACL,QAAI;AAAEnD,MAAAA;AAAF,QAAe,KAAKD,KAAxB,CADK,CACwB;;AAC7B,WACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAM,MAAA,QAAQ,EAAE,KAAK0B,YAArB;AAAmC,MAAA,QAAQ,EAAE,KAAKf,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAAE0C,QAAAA,SAAS,EAAE;AAAb,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAoB,MAAA,IAAI,EAAC,MAAzB;AAAgC,MAAA,EAAE,EAAC,MAAnC;AAA0C,MAAA,SAAS,EAAC,cAApD;AAAmE,MAAA,WAAW,EAAC,YAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CADJ,EAOI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAU,MAAA,IAAI,EAAC,aAAf;AAA8B,MAAA,EAAE,EAAC,aAAjC;AAA+C,MAAA,SAAS,EAAC,cAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CAPJ,CADJ,EAeI;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,CADJ,CADJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAE,KAAKjC,SAApB;AAA+B,MAAA,MAAM,EAAE,KAAK6B,aAAL,CAAmBK,IAAnB,CAAwB,IAAxB,CAAvC;AAAsE,MAAA,QAAQ,EAAErD,QAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CATJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAI,MAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAQ,MAAA,OAAO,EAAE,KAAKmB,SAAtB;AAAiC,MAAA,IAAI,EAAC,QAAtC;AAA+C,MAAA,SAAS,EAAC,6BAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuF;AAAG,MAAA,SAAS,EAAC,mBAAb;AAAiC,qBAAY,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvF,CADA,CAAJ,CADJ,CAZJ,CAfJ,CAFJ,EAoCI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA0C;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,6BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA1C,CApCJ,CADJ,CAFJ,EA0CI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1CJ,CADJ,CAFJ,CADJ;AAmDH;;AArH8B;;AAuHnC,eAAetB,IAAf","sourcesContent":["import React from \"react\"\nimport TaskList from \"./taskList\"\nimport axios from 'axios';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nclass Form extends React.Component {\n   \n    state = {\n        taskList: [{ index: Math.random(), projectName: \"\", task: \"\", taskNotes: \"\", taskStatus: \"\" }],\n        date: \"\",\n        description: \"\",\n    }\n\n\n    handleChange = (e) => {\n        if ([\"projectName\", \"task\", \"taskNotes\", \"taskStatus\"].includes(e.target.name)) {\n            let taskList = [...this.state.taskList]\n            taskList[e.target.dataset.id][e.target.name] = e.target.value;\n        } else {\n            this.setState({ [e.target.name]: e.target.value })\n        }\n    }\n    addNewRow = (e) => {\n        this.setState((prevState) => ({\n            taskList: [...prevState.taskList, { index: Math.random(), projectName: \"\", task: \"\", taskNotes: \"\", taskStatus: \"\" }],\n        }));\n    }\n\n    deteteRow = (index) => {\n        this.setState({\n            taskList: this.state.taskList.filter((s, sindex) => index !== sindex),\n        });\n        // const taskList1 = [...this.state.taskList];\n        // taskList1.splice(index, 1);\n        // this.setState({ taskList: taskList1 });\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        if(this.state.date==='' || this.state.description==='')\n        {\n            NotificationManager.warning(\"Please Fill up Required Field . Please check Task and Date Field\");\n            return false;\n        }\n        for(var i=0;i<this.state.taskList.length;i++)\n        {\n                if(this.state.taskList[i].projectName==='' || this.state.taskList[i].task==='')\n                {\n                    NotificationManager.warning(\"Please Fill up Required Field.Please Check Project name And Task Field\");\n                    return false;\n                }\n        }\n        let data = { formData: this.state, userData: localStorage.getItem('user') }\n        axios.defaults.headers.common[\"Authorization\"] = localStorage.getItem('token');\n        axios.post(\"http://localhost:9000/api/task\", data).then(res => {\n            if(res.data.success) NotificationManager.success(res.data.msg);\n        }).catch(error => {\n            if(error.response.status && error.response.status===400)\n            NotificationManager.error(\"Bad Request\");\n            else NotificationManager.error(\"Something Went Wrong\");\n            this.setState({ errors: error })\n        });\n    }\n\n    clickOnDelete(record) {\n        this.setState({\n            taskList: this.state.taskList.filter(r => r !== record)\n        });\n    }\n\n    render() {\n        let { taskList } = this.state//let { notes, date, description, taskList } = this.state\n        return (\n            <div className=\"content\">\n                <NotificationContainer/>\n                <form onSubmit={this.handleSubmit} onChange={this.handleChange} >\n                    <div className=\"row\" style={{ marginTop: 20 }}>\n                        <div className=\"col-sm-1\"></div>\n                        <div className=\"col-sm-10\">\n                            <div className=\"card\">\n                                <div className=\"card-header text-center\">Add Your Daily Task</div>\n                                <div className=\"card-body\">\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-4\">\n                                            <div className=\"form-group \">\n                                                <label className=\"required\">Date</label>\n                                                <input type=\"date\"  name=\"date\" id=\"date\" className=\"form-control\" placeholder=\"Enter Date\" />\n                                            </div>\n                                        </div>\n                                        <div className=\"col-sm-4\">\n                                            <div className=\"form-group \">\n                                                <label className=\"required\">Description</label>\n                                                <textarea name=\"description\"  id=\"description\" className=\"form-control\"></textarea>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <table className=\"table\">\n                                        <thead>\n                                            <tr>\n                                                <th className=\"required\" >Project Name</th>\n                                                <th className=\"required\" >Task</th>\n                                                <th>Notes</th>\n                                                <th>Status</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <TaskList add={this.addNewRow} delete={this.clickOnDelete.bind(this)} taskList={taskList} />\n                                        </tbody>\n                                        <tfoot>\n                                            <tr><td colSpan=\"4\">\n                                                <button onClick={this.addNewRow} type=\"button\" className=\"btn btn-primary text-center\"><i className=\"fa fa-plus-circle\" aria-hidden=\"true\"></i></button>\n                                            </td></tr>\n                                        </tfoot>\n                                    </table>\n                                </div>\n                                <div className=\"card-footer text-center\"> <button type=\"submit\" className=\"btn btn-primary text-center\">Submit</button></div>\n                            </div>\n                        </div>\n                        <div className=\"col-sm-1\"></div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\nexport default Form"]},"metadata":{},"sourceType":"module"}