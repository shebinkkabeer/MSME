{"ast":null,"code":"var _jsxFileName = \"/home/shebin/Desktop/lcomernbootcamp/projfrontend/src/core/StripeCheckout.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { isAutheticated } from \"../auth/helper\";\nimport { cartEmpty, loadCart } from \"./helper/cartHelper\";\nimport { Link } from \"react-router-dom\";\nimport StripeCheckoutButton from \"react-stripe-checkout\";\nimport { API } from \"../backend\";\nimport { createOrder } from \"./helper/orderHelper\";\n\nconst StripeCheckout = ({\n  products,\n  setReload = f => f,\n  reload = undefined\n}) => {\n  const [data, setData] = useState({\n    loading: false,\n    success: false,\n    error: \"\",\n    address: \"\"\n  });\n  const token = isAutheticated() && isAutheticated().token;\n\n  const userId = isAutheticated() && isAutheticated().user._id;\n\n  const getFinalAmount = () => {\n    let amount = 0;\n    products.map(p => {\n      amount = amount + p.price;\n    });\n    return amount;\n  };\n\n  const makePayment = token => {\n    const body = {\n      token,\n      products\n    };\n    const headers = {\n      \"Content-Type\": \"application/json\"\n    };\n    return fetch(`${API}/stripepayment`, {\n      method: \"POST\",\n      headers,\n      body: JSON.stringify(body)\n    }).then(response => {\n      setData({ ...data,\n        success: response.success,\n        loading: false\n      });\n      console.log(\"Payment Success\"); //call further methods\n    }).catch(error => {\n      setData({\n        loading: false,\n        success: false\n      });\n      console.log(\"Payment Success\");\n    });\n  };\n\n  const showStripeButton = () => {\n    return isAutheticated() ? React.createElement(StripeCheckoutButton, {\n      stripeKey: process.env.REACT_APP_SECRET,\n      token: makePayment,\n      amount: getFinalAmount() * 100,\n      name: \"Buy Tshirts\",\n      shippingAddress: true,\n      billingAddress: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Pay with stripe\")) : React.createElement(Link, {\n      to: \"/signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Signin\"));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"text-white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Stripe Checkout \", getFinalAmount()), showStripeButton());\n};\n\nexport default StripeCheckout;","map":{"version":3,"sources":["/home/shebin/Desktop/lcomernbootcamp/projfrontend/src/core/StripeCheckout.js"],"names":["React","useState","useEffect","isAutheticated","cartEmpty","loadCart","Link","StripeCheckoutButton","API","createOrder","StripeCheckout","products","setReload","f","reload","undefined","data","setData","loading","success","error","address","token","userId","user","_id","getFinalAmount","amount","map","p","price","makePayment","body","headers","fetch","method","JSON","stringify","then","response","console","log","catch","showStripeButton","process","env","REACT_APP_SECRET"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { isAutheticated } from \"../auth/helper\";\nimport { cartEmpty, loadCart } from \"./helper/cartHelper\";\nimport { Link } from \"react-router-dom\";\nimport StripeCheckoutButton from \"react-stripe-checkout\";\nimport { API } from \"../backend\";\nimport { createOrder } from \"./helper/orderHelper\";\n\nconst StripeCheckout = ({\n  products,\n  setReload = f => f,\n  reload = undefined\n}) => {\n  const [data, setData] = useState({\n    loading: false,\n    success: false,\n    error: \"\",\n    address: \"\"\n  });\n\n  const token = isAutheticated() && isAutheticated().token;\n  const userId = isAutheticated() && isAutheticated().user._id;\n\n  const getFinalAmount = () => {\n    let amount = 0;\n    products.map(p => {\n      amount = amount + p.price;\n    });\n    return amount;\n  };\n\n  const makePayment = token => {\n    const body = {\n      token,\n      products\n    };\n    const headers = {\n      \"Content-Type\": \"application/json\"\n    };\n    return fetch(`${API}/stripepayment`, {\n      method: \"POST\",\n      headers,\n      body: JSON.stringify(body)\n    })\n      .then(response => {\n        setData({ ...data, success: response.success, loading: false });\n\n        console.log(\"Payment Success\");\n        //call further methods\n      })\n      .catch(error => {\n        setData({loading:false,success:false});\n        console.log(\"Payment Success\")});\n  };\n\n  const showStripeButton = () => {\n    return isAutheticated() ? (\n      <StripeCheckoutButton\n        stripeKey={process.env.REACT_APP_SECRET}\n        token={makePayment}\n        amount={getFinalAmount() * 100}\n        name=\"Buy Tshirts\"\n        shippingAddress\n        billingAddress\n      >\n        <button className=\"btn btn-success\">Pay with stripe</button>\n      </StripeCheckoutButton>\n    ) : (\n      <Link to=\"/signin\">\n        <button className=\"btn btn-warning\">Signin</button>\n      </Link>\n    );\n  };\n\n  return (\n    <div>\n      <h3 className=\"text-white\">Stripe Checkout {getFinalAmount()}</h3>\n      {showStripeButton()}\n    </div>\n  );\n};\n\nexport default StripeCheckout;\n"]},"metadata":{},"sourceType":"module"}