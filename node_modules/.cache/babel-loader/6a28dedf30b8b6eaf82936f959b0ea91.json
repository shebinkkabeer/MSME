{"ast":null,"code":"var _jsxFileName = \"/home/shebin/Desktop/lcomernbootcamp/projfrontend/src/admin/UpdateCategory.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link } from \"react-router-dom\";\nimport { getCategories, getCategory, updateCategory } from \"./helper/adminapicall\";\nimport { isAutheticated } from \"../auth/helper/index\";\n\nconst UpdateCategory = ({\n  match\n}) => {\n  const {\n    user,\n    token\n  } = isAutheticated();\n  const [values, setValues] = useState({\n    name: \"\",\n    loading: false,\n    error: \"\",\n    getaRedirect: false\n  });\n  const {\n    name,\n    loading,\n    error\n  } = values;\n\n  const preload = categoryId => {\n    getCategory(categoryId).then(data => {\n      if (data === null || data === void 0 ? void 0 : data.error) {\n        setValues({ ...values,\n          error: data.error\n        });\n      } else {\n        setValues({ ...values,\n          name: data.name\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    preload(match.params.categoryId);\n  }, []); //TODO: work on it\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values,\n      error: \"\",\n      loading: true\n    });\n    updateCategory(match.params.categoryId, user._id, token, {\n      name\n    }).then(data => {\n      if (data.error) {\n        setValues({ ...values,\n          error: data.error\n        });\n      } else {\n        setValues({ ...values,\n          name: \"\"\n        });\n      }\n    });\n  };\n\n  const handleChange = name => event => {\n    const value = event.target.value;\n    setValues({ ...values,\n      name: value\n    });\n  };\n\n  const successMessage = () => React.createElement(\"div\", {\n    className: \"alert alert-success mt-3\",\n    style: {\n      display: error ? \"none\" : \"\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, name, \" updated successfully\"));\n\n  const myCategoryForm = () => React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Type new category\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control my-3\",\n    onChange: handleChange(name),\n    value: name,\n    autoFocus: true,\n    required: true,\n    placeholder: \"for ex.Wildbore\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: onSubmit,\n    className: \"btn btn-outline-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"update Category\")));\n\n  return React.createElement(Base, {\n    title: \"Update Category Here!\",\n    description: \"Welcome to Category Updation Section... \",\n    className: \"container bg-info p-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/admin/dashboard\",\n    className: \"btn btn-md btn-dark mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Admin Home\"), React.createElement(\"div\", {\n    className: \"row bg-dark text-white rounded\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-8 offset-md-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, successMessage(), myCategoryForm())));\n};\n\nexport default UpdateCategory;","map":{"version":3,"sources":["/home/shebin/Desktop/lcomernbootcamp/projfrontend/src/admin/UpdateCategory.js"],"names":["React","useState","useEffect","Base","Link","getCategories","getCategory","updateCategory","isAutheticated","UpdateCategory","match","user","token","values","setValues","name","loading","error","getaRedirect","preload","categoryId","then","data","params","onSubmit","event","preventDefault","_id","handleChange","value","target","successMessage","display","myCategoryForm"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getCategories,\n  getCategory,\n  updateCategory\n} from \"./helper/adminapicall\";\nimport { isAutheticated } from \"../auth/helper/index\";\n\nconst UpdateCategory = ({ match }) => {\n  const { user, token } = isAutheticated();\n\n  const [values, setValues] = useState({\n    name: \"\",\n    loading: false,\n    error: \"\",\n    getaRedirect: false,\n  });\n\n  const {\n    name,\n    loading,\n    error,\n  } = values;\n\n  const preload = categoryId => {\n    getCategory(categoryId).then(data => {\n      if (data?.error) {\n        setValues({ ...values, error: data.error });\n      } else {\n        setValues({\n          ...values,\n          name: data.name,\n        });\n      }\n    });\n  };\n\n\n\n  useEffect(() => {\n    preload(match.params.categoryId);\n  }, []);\n\n  //TODO: work on it\n  const onSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values, error: \"\", loading: true });\n\n    updateCategory(match.params.categoryId, user._id, token, {name}).then(\n      data => {\n        if (data.error) {\n          setValues({ ...values, error: data.error });\n        } else {\n          setValues({\n            ...values,\n            name: \"\",\n          });\n        }\n      }\n    );\n  };\n\n  const handleChange = name => event => {\n    const value =event.target.value;\n    setValues({ ...values, name: value });\n  };\n\n  const successMessage = () => (\n    <div\n      className=\"alert alert-success mt-3\"\n      style={{ display: error ? \"none\" : \"\" }}\n    >\n      <h4>{name} updated successfully</h4>\n    </div>\n  );\n  const myCategoryForm = () => (\n    <form>\n      <div className=\"form-group\">\n        <p className=\"lead\">Type new category</p>\n        <input\n          type=\"text\"\n          className=\"form-control my-3\"\n          onChange={handleChange(name)}\n          value={name}\n          autoFocus\n          required\n          placeholder=\"for ex.Wildbore\"\n        />\n        <button onClick={onSubmit} className=\"btn btn-outline-info\">\n          update Category\n        </button>\n      </div>\n    </form>\n  );\n\n  return (\n    <Base\n      title=\"Update Category Here!\"\n      description=\"Welcome to Category Updation Section... \"\n      className=\"container bg-info p-4\"\n    >\n      <Link to=\"/admin/dashboard\" className=\"btn btn-md btn-dark mb-3\">\n        Admin Home\n      </Link>\n      <div className=\"row bg-dark text-white rounded\">\n        <div className=\"col-md-8 offset-md-2\">\n          {successMessage()}\n          {myCategoryForm()}\n        </div>\n      </div>\n    </Base>\n  );\n};\n\nexport default UpdateCategory;\n"]},"metadata":{},"sourceType":"module"}