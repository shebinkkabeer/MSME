{"ast":null,"code":"import { API } from \"../../backend\";\nimport axios from \"axios\"; //company calls\n\nexport const createCompany = async (token, company) => {\n  const data = JSON.stringify(company);\n  return await axios.post(`${API}/company/add`, data, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"auth-token\": token\n    }\n  }).then(response => {\n    return response.data;\n  }).catch(error => {\n    return {\n      error: error.response.data.message\n    };\n  });\n}; //get all companies\n\nexport const getCompany = async token => {\n  return await axios.get(`${API}/company/all`, {\n    headers: {\n      \"auth-token\": token\n    }\n  }).then(response => {\n    return response.data.companies;\n  }).catch(error => {\n    return {\n      error: error.response.data.message\n    };\n  });\n}; //getaCompany \n\nexport const getaCompany = async (token, companyId) => {\n  return await axios.get(`${API}/company/find/${companyId}`, {\n    headers: {\n      \"auth-token\": token\n    }\n  }).then(response => {\n    return response.data.details;\n  }).catch(error => {\n    return {\n      error: error.response.data.message\n    };\n  });\n}; //update category\n\nexport const updateCompany = async (companyId, token, company) => {\n  const {\n    name,\n    description,\n    address,\n    contact\n  } = company;\n  return await axios.put(`${API}/company/update`, {\n    _id: companyId,\n    name,\n    description,\n    address,\n    contact\n  }, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"auth-token\": token\n    }\n  }).then(response => {\n    return response.data;\n  }).catch(error => {\n    return {\n      error: error.response.data.message\n    };\n  });\n}; //deleteCompany\n\nexport const deleteCompany = (token, companyId) => {\n  //const id=JSON.stringify(token);\n  return axios.delete(`${API}/company/delete/${companyId}`, {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"auth-token\": token\n    }\n  }).then(response => {\n    return response.data;\n  }).catch(error => {\n    console.log({\n      error: error.response.data.message\n    });\n  });\n}; //production call\n\nexport const getProduction = async (token, companyId) => {\n  return await axios.get(`${API}/production/company/${companyId}`, {\n    headers: {\n      \"auth-token\": token\n    }\n  }).then(response => {\n    return response.data;\n  }).catch(error => {\n    return {\n      error: error.response.data.message\n    };\n  });\n};\nexport const createProduction = async (token, companyId, name) => {\n  return await axios.post(`${API}/production/add`, {\n    company: companyId,\n    production: name\n  }, {\n    headers: {\n      \"auth-token\": token\n    }\n  }).then(response => {\n    return response.data;\n  }).catch(error => {\n    return {\n      error: error.response.data.message\n    };\n  });\n}; //major calls\n\nexport const getInformation = async (token, productionId) => {\n  return await axios.get(`${API}/production/data/information/${productionId}`, {\n    headers: {\n      \"auth-token\": token\n    }\n  }).then(response => {\n    console.log(response.data.informations.informations);\n  }).catch(error => {\n    console.log({\n      error: error.response.data.message\n    });\n  });\n};\nexport const getSupplier = async (token, productionId) => {\n  return await axios.get(`${API}/production/data/supplier/${productionId}`, {\n    headers: {\n      \"auth-token\": token\n    }\n  }).then(response => {\n    console.log(response.data.informations.informations);\n  }).catch(error => {\n    console.log({\n      error: error.response.data\n    });\n  });\n};","map":{"version":3,"sources":["/home/shebin/Desktop/allen/src/admin/helper/adminapicall.js"],"names":["API","axios","createCompany","token","company","data","JSON","stringify","post","headers","then","response","catch","error","message","getCompany","get","companies","getaCompany","companyId","details","updateCompany","name","description","address","contact","put","_id","deleteCompany","delete","Accept","console","log","getProduction","createProduction","production","getInformation","productionId","informations","getSupplier"],"mappings":"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","sourcesContent":["import { API } from \"../../backend\";\nimport axios from \"axios\";\n\n//company calls\nexport const createCompany = async(token, company) => {\nconst data=JSON.stringify(company);\nreturn await axios.post(`${API}/company/add`,(data),{headers: {\n \"Content-Type\": \"application/json\",\n \"auth-token\": token\n}})\n.then(response=> {\nreturn(response.data);\n})\n.catch(error=>{ \nreturn {error:error.response.data.message};     \n})};\n     \n\n//get all companies\n\nexport const getCompany = async(token) => {\n  \n  return await axios.get(`${API}/company/all`,{headers: {\n   \"auth-token\": token\n  }})\n  .then(response=> {\n  return(response.data.companies);\n  })\n  .catch(error=>{ \n  return( {error:error.response.data.message});   \n  })};\n\n //getaCompany \n\n export const getaCompany = async(token,companyId) => {\n  \n  return await axios.get(`${API}/company/find/${companyId}`,{headers: {\n   \"auth-token\": token\n  }})\n  .then(response=> {\n  return(response.data.details);\n  })\n  .catch(error=>{ \n    \n\n   return( {error:error.response.data.message});   \n  })};\n       \n\n\n\n\n\n\n\n\n\n \n//update category\nexport const updateCompany = async(companyId,token, company) => {\n  const {name,description,address,contact}=company;\n  return await axios.put(`${API}/company/update`,{_id:companyId,name,description,address,contact},{headers: {\n   \"Content-Type\": \"application/json\",\n   \"auth-token\": token\n  }})\n  .then(response=> {\n  return(response.data);\n  })\n  .catch(error=>{ \n  return({error:error.response.data.message}); \n   \n  })};\n\n\n\n\n//deleteCompany\n\nexport const deleteCompany = (token,companyId) => {\n  //const id=JSON.stringify(token);\n  \n  return axios.delete(`${API}/company/delete/${companyId}`,{headers: {\n    Accept:\"application/json\",\n    \"Content-Type\":\"application/json\",\n    \"Access-Control-Allow-Origin\":\"*\",\n   \"auth-token\":token\n   \n  }})\n  .then(response=> {\n  return(response.data);\n  })\n  .catch(error=>{ \n    \n  console.log( {error:error.response.data.message});   \n  })};\n\n\n//production call\n\n         \nexport const getProduction = async(token,companyId) => {\n  \n  return await axios.get(`${API}/production/company/${companyId}`,{headers: {\n   \"auth-token\": token\n  }})\n  .then(response=> {\n  return(response.data);\n  })\n  .catch(error=>{ \n    \n\n   return( {error:error.response.data.message});   \n  })};\n\n\n  export const createProduction = async(token,companyId,name) => {\n \n    return await axios.post(`${API}/production/add`,{company:companyId,production:name},{headers: {\n     \"auth-token\": token\n    }})\n    .then(response=> {\n    return(response.data);\n    })\n    .catch(error=>{ \n      \n  \n     return( {error:error.response.data.message});   \n    })};\n\n\n    //major calls\n\n    export const getInformation = async(token,productionId) => {\n      \n      return await axios.get(`${API}/production/data/information/${productionId}`,{headers: {\n       \"auth-token\": token\n      }})\n      .then(response=> {\n      console.log(response.data.informations.informations);\n      })\n      .catch(error=>{ \n        \n    \n       console.log( {error:error.response.data.message});   \n      })};\n\n      export const getSupplier = async(token,productionId) => {\n      \n        return await axios.get(`${API}/production/data/supplier/${productionId}`,{headers: {\n         \"auth-token\": token\n        }})\n        .then(response=> {\n        console.log(response.data.informations.informations);\n        })\n        .catch(error=>{ \n          \n      \n         console.log( {error:error.response.data});   \n        })};\n"]},"metadata":{},"sourceType":"module"}