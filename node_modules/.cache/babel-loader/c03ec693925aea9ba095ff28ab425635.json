{"ast":null,"code":"var _jsxFileName = \"/home/shebin/Desktop/allen/src/admin/UpdateCompany.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link } from \"react-router-dom\";\nimport { getCategories, getCategory, updateCategory } from \"./helper/adminapicall\";\nimport { isAutheticated } from \"../auth/helper/index\";\n\nconst UpdateCompany = ({\n  match\n}) => {\n  const tokrole = JSON.parse(localStorage.getItem(\"jwt\"));\n  const token = tokrole.access_token;\n  const [values, setValues] = useState({\n    name: \"\",\n    description: \"\",\n    address: \"\",\n    contact: \"\",\n    newName: \"\",\n    newDescription: \"\",\n    newAddress: \"\",\n    newContact: \"\",\n    error: false,\n    success: false,\n    loading: false,\n    getaRedirect: false\n  });\n  const {\n    name,\n    description,\n    address,\n    contact,\n    newName,\n    newDescription,\n    newAddress,\n    newContact,\n    error,\n    loading,\n    getaRedirect,\n    success\n  } = values;\n\n  const preload = companyId => {\n    getCategory(companyId).then(data => {\n      if (data.error) {\n        setValues({ ...values,\n          error: data.error\n        });\n      } else {\n        setValues({ ...values,\n          name: data.name,\n          description: data.name,\n          address: data.address,\n          contact: data.contact\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    preload(match.params.companyId);\n  }, []); // console.log({token});\n  // console.log(user._id);\n  // console.log(match.params.categoryId);\n  //TODO: work on it\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values,\n      error: \"\",\n      loading: true\n    });\n    updateCategory(match.params.companyId, token, {\n      name,\n      description,\n      address,\n      contact\n    }).then(data => {\n      if (data.error) {\n        setValues({ ...values,\n          error: data.error\n        });\n      } else {\n        setValues({ ...values,\n          name: \"\",\n          description: \"\",\n          address: \"\",\n          contact: \"\",\n          newName: true\n        });\n      }\n    });\n  };\n\n  const handleChange = name => event => {\n    setValues({ ...values,\n      error: \"\",\n      [name]: event.target.value\n    });\n  };\n\n  const successMessage = () => React.createElement(\"div\", {\n    className: \"alert alert-success mt-3\",\n    style: {\n      display: newName ? \"\" : \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Updation successfull\"));\n\n  const errorMessage = () => {\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 offset-sm-3 text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      style: {\n        display: error ? \"\" : \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, error)));\n  };\n\n  const myCategoryForm = () => React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Type new Name\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control my-3\",\n    onChange: handleChange(name),\n    value: name,\n    autoFocus: true,\n    required: true,\n    placeholder: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Type new description\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control my-3\",\n    onChange: handleChange(description),\n    value: description,\n    autoFocus: true,\n    required: true,\n    placeholder: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"Type new address\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control my-3\",\n    onChange: handleChange(address),\n    value: address,\n    autoFocus: true,\n    required: true,\n    placeholder: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Type new contact\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control my-3\",\n    onChange: handleChange(contact),\n    value: contact,\n    autoFocus: true,\n    required: true,\n    placeholder: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: onSubmit,\n    className: \"btn btn-outline-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"update Category\")));\n\n  return React.createElement(Base, {\n    title: \"Update Category Here!\",\n    description: \"Welcome to Category Updation Section... \",\n    className: \"container bg-info p-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/admin/dashboard\",\n    className: \"btn btn-md btn-dark mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, \"Admin Home\"), React.createElement(\"div\", {\n    className: \"row bg-dark text-white rounded\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-8 offset-md-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, successMessage(), errorMessage(), myCategoryForm())));\n};\n\nexport default UpdateCompany;","map":{"version":3,"sources":["/home/shebin/Desktop/allen/src/admin/UpdateCompany.js"],"names":["React","useState","useEffect","Base","Link","getCategories","getCategory","updateCategory","isAutheticated","UpdateCompany","match","tokrole","JSON","parse","localStorage","getItem","token","access_token","values","setValues","name","description","address","contact","newName","newDescription","newAddress","newContact","error","success","loading","getaRedirect","preload","companyId","then","data","params","onSubmit","event","preventDefault","handleChange","target","value","successMessage","display","errorMessage","myCategoryForm"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getCategories,\n  getCategory,\n  updateCategory\n} from \"./helper/adminapicall\";\nimport { isAutheticated } from \"../auth/helper/index\";\n\nconst UpdateCompany = ({ match }) => {\n  const tokrole=JSON.parse(localStorage.getItem(\"jwt\"));\n  const token=tokrole.access_token;\n\n  \n\n  const [values, setValues] = useState({\n    name: \"\",\n    description:\"\",\n    address:\"\",\n    contact:\"\",\n    newName:\"\",\n    newDescription:\"\",\n    newAddress:\"\",\n    newContact:\"\",\n    error: false,\n    success:false,\n    loading: false,\n    getaRedirect: false,\n    });\n\n  const {\n    name,\n    description,\n    address,\n    contact,\n    newName,\n    newDescription,\n    newAddress,\n    newContact,\n    error,\n    loading,\n    getaRedirect,\n    success\n  } = values;\n\n  const preload = companyId => {\n    getCategory(companyId).then(data => {\n      if (data.error) {\n        setValues({ ...values, error: data.error });\n      } else {\n        setValues({\n          ...values,\n          name: data.name,\n          description:data.name,\n          address:data.address,\n          contact:data.contact,\n         \n        });\n      }\n    });\n  };\n\n\n\n  useEffect(() => {\n    preload(match.params.companyId);\n  }, []);\n  // console.log({token});\n  // console.log(user._id);\n  // console.log(match.params.categoryId);\n\n  \n\n  //TODO: work on it\n  const onSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values, error: \"\", loading: true });\n\n    updateCategory(match.params.companyId,token,{name,description,address,contact}).then(\n      data => {\n        if (data.error) {\n          setValues({ ...values, error: data.error });\n        } else {\n          setValues({\n            ...values,\n            name: \"\",\n            description:\"\",\n            address:\"\",\n            contact:\"\",\n            newName:true,\n        \n          });\n        }\n      }\n    );\n  };\n\n  const handleChange = name => event => {\n    setValues({ ...values, error: \"\", [name]: event.target.value });\n  };\n\n\n\n  const successMessage = () => (\n    <div\n      className=\"alert alert-success mt-3\"\n      style={{ display: newName ? \"\" : \"none\" }}\n    >\n      <h4>Updation successfull</h4>\n    </div>\n  );\n\n  const errorMessage = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n          <div\n            className=\"alert alert-danger\"\n            style={{ display: error ? \"\" : \"none\" }}\n          >\n            {error}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const myCategoryForm = () => (\n    <form>\n      <div className=\"form-group\">\n        <p className=\"lead\">Type new Name</p>\n        <input\n          type=\"text\"\n          className=\"form-control my-3\"\n          onChange={handleChange(name)}\n          value={name}\n          autoFocus\n          required\n          placeholder=\"\"\n        />\n\n        <p className=\"lead\">Type new description</p>\n        <input\n          type=\"text\"\n          className=\"form-control my-3\"\n          onChange={handleChange(description)}\n          value={description}\n          autoFocus\n          required\n          placeholder=\"\"\n        />\n\n        <p className=\"lead\">Type new address</p>\n        <input\n          type=\"text\"\n          className=\"form-control my-3\"\n          onChange={handleChange(address)}\n          value={address}\n          autoFocus\n          required\n          placeholder=\"\"\n        />\n\n        <p className=\"lead\">Type new contact</p>\n        <input\n          type=\"text\"\n          className=\"form-control my-3\"\n          onChange={handleChange(contact)}\n          value={contact}\n          autoFocus\n          required\n          placeholder=\"\"\n        />\n        <button onClick={onSubmit} className=\"btn btn-outline-info\">\n          update Category\n        </button>\n      </div>\n    </form>\n  );\n\n  return (\n    <Base\n      title=\"Update Category Here!\"\n      description=\"Welcome to Category Updation Section... \"\n      className=\"container bg-info p-4\"\n    >\n      <Link to=\"/admin/dashboard\" className=\"btn btn-md btn-dark mb-3\">\n        Admin Home\n      </Link>\n      <div className=\"row bg-dark text-white rounded\">\n        <div className=\"col-md-8 offset-md-2\">\n          {successMessage()}\n          {errorMessage()}\n          {myCategoryForm()}\n        </div>\n      </div>\n    </Base>\n  );\n};\n\nexport default UpdateCompany;\n"]},"metadata":{},"sourceType":"module"}