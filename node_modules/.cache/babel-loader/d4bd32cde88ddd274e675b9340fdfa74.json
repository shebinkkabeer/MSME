{"ast":null,"code":"import { API } from \"../../backend\";\n\nconst axios = require('axios');\n\nexport const signup = async user => {\n  return await fetch(`${API}/user/register`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err.message));\n};\nconst {\n  name,\n  email,\n  password,\n  password2\n} = user;\nexport const signin = async user => {\n  return await axios.post(`${API}/user/login`, {\n    email,\n    password\n  }, {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(error => {\n    console.log(error.response);\n  });\n}; // export const signin = async(user) => {\n//   return await fetch(`${API}/user/login`, {\n//     method: \"POST\",\n//     headers: {\n//       Accept: \"application/json\",\n//       \"Content-Type\": \"application/json\"\n//     },\n//     body: JSON.stringify(user)\n//   })\n//     .then(response => {\n//       console.log(response);\n//     })\n//     .catch(err => console.log(err));\n// };\n\nexport const authenticate = (data, next) => {\n  if (typeof window !== \"undefined\") {\n    localStorage.setItem(\"jwt\", JSON.stringify(data));\n    next();\n  }\n};\nexport const signout = next => {\n  if (typeof window !== \"undefined\") {\n    localStorage.removeItem(\"jwt\");\n    next();\n    return fetch(`${API}/signout`, {\n      method: \"GET\"\n    }).then(response => console.log(\"signout success\")).catch(err => console.log(err));\n  }\n};\nexport const isAutheticated = () => {\n  if (typeof window == \"undefined\") {\n    return false;\n  }\n\n  if (localStorage.getItem(\"jwt\")) {\n    return JSON.parse(localStorage.getItem(\"jwt\"));\n  } else {\n    return false;\n  }\n};","map":{"version":3,"sources":["/home/shebin/Desktop/allen/src/auth/helper/index.js"],"names":["API","axios","require","signup","user","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","catch","err","console","log","message","name","email","password","password2","signin","post","error","authenticate","data","next","window","localStorage","setItem","signout","removeItem","isAutheticated","getItem","parse"],"mappings":"AAAA,SAASA,GAAT,QAAoB,eAApB;;AAEA,MAAMC,KAAK,GAACC,OAAO,CAAC,OAAD,CAAnB;;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAMC,IAAN,IAAe;AACnC,SAAO,MAAMC,KAAK,CAAE,GAAEL,GAAI,gBAAR,EAAyB;AACzCM,IAAAA,MAAM,EAAE,MADiC;AAEzCC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB;AAFT,KAFgC;AAMzCC,IAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeP,IAAf;AANoC,GAAzB,CAAL,CAQVQ,IARU,CAQLC,QAAQ,IAAI;AAChB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAVU,EAWVC,KAXU,CAWJC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB,CAXH,CAAb;AAYD,CAbM;AAcP,MAAM;AAACC,EAAAA,IAAD;AAAMC,EAAAA,KAAN;AAAYC,EAAAA,QAAZ;AAAqBC,EAAAA;AAArB,IAAgCnB,IAAtC;AACA,OAAO,MAAMoB,MAAM,GAAG,MAAMpB,IAAN,IAAe;AACpC,SAAO,MAAMH,KAAK,CAACwB,IAAN,CAAY,GAAEzB,GAAI,aAAlB,EAA+B;AAACqB,IAAAA,KAAD;AAAOC,IAAAA;AAAP,GAA/B,EAAgD;AAACf,IAAAA,OAAO,EAAE;AACpEC,MAAAA,MAAM,EAAE,kBAD4D;AAEpE,sBAAgB;AAFoD;AAAV,GAAhD,EAIbI,IAJa,CAIRC,QAAQ,IAAG;AAChB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACA,GANa,EAObC,KAPa,CAOPW,KAAK,IAAE;AACZT,IAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAK,CAACb,QAAlB;AACD,GATa,CAAb;AASE,CAVI,C,CAYP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMc,YAAY,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAC1C,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjCC,IAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BtB,IAAI,CAACC,SAAL,CAAeiB,IAAf,CAA5B;AACAC,IAAAA,IAAI;AACL;AACF,CALM;AAOP,OAAO,MAAMI,OAAO,GAAGJ,IAAI,IAAI;AAC7B,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjCC,IAAAA,YAAY,CAACG,UAAb,CAAwB,KAAxB;AACAL,IAAAA,IAAI;AAEJ,WAAOxB,KAAK,CAAE,GAAEL,GAAI,UAAR,EAAmB;AAC7BM,MAAAA,MAAM,EAAE;AADqB,KAAnB,CAAL,CAGJM,IAHI,CAGCC,QAAQ,IAAII,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAHb,EAIJH,KAJI,CAIEC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJT,CAAP;AAKD;AACF,CAXM;AAaP,OAAO,MAAMmB,cAAc,GAAG,MAAM;AAClC,MAAI,OAAOL,MAAP,IAAiB,WAArB,EAAkC;AAChC,WAAO,KAAP;AACD;;AACD,MAAIC,YAAY,CAACK,OAAb,CAAqB,KAArB,CAAJ,EAAiC;AAC/B,WAAO1B,IAAI,CAAC2B,KAAL,CAAWN,YAAY,CAACK,OAAb,CAAqB,KAArB,CAAX,CAAP;AACD,GAFD,MAEO;AACL,WAAO,KAAP;AACD;AACF,CATM","sourcesContent":["import { API } from \"../../backend\";\n\nconst axios=require('axios');\n\nexport const signup = async(user) => {\n  return await fetch(`${API}/user/register`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body:JSON.stringify(user)\n  })\n    .then(response => {\n      return response.json();\n    })\n    .catch(err => console.log(err.message));\n};\nconst {name,email,password,password2}=user;\nexport const signin = async(user) => {\n return await axios.post(`${API}/user/login`,{email,password},{headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  }})\n.then(response=> {\n return response.json();\n})\n.catch(error=>{ \n  console.log(error.response);\n})};\n\n// export const signin = async(user) => {\n//   return await fetch(`${API}/user/login`, {\n//     method: \"POST\",\n//     headers: {\n//       Accept: \"application/json\",\n//       \"Content-Type\": \"application/json\"\n//     },\n//     body: JSON.stringify(user)\n//   })\n//     .then(response => {\n//       console.log(response);\n//     })\n//     .catch(err => console.log(err));\n// };\n\nexport const authenticate = (data, next) => {\n  if (typeof window !== \"undefined\") {\n    localStorage.setItem(\"jwt\", JSON.stringify(data));\n    next();\n  }\n};\n\nexport const signout = next => {\n  if (typeof window !== \"undefined\") {\n    localStorage.removeItem(\"jwt\");\n    next();\n\n    return fetch(`${API}/signout`, {\n      method: \"GET\"\n    })\n      .then(response => console.log(\"signout success\"))\n      .catch(err => console.log(err));\n  }\n};\n\nexport const isAutheticated = () => {\n  if (typeof window == \"undefined\") {\n    return false;\n  }\n  if (localStorage.getItem(\"jwt\")) {\n    return JSON.parse(localStorage.getItem(\"jwt\"));\n  } else {\n    return false;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}