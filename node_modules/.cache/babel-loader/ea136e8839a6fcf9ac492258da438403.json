{"ast":null,"code":"var _jsxFileName = \"/home/shebin/Desktop/allen/src/admin/AddProduction.js\";\nimport React, { useState } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link } from \"react-router-dom\";\n\nconst AddProduction = ({\n  match\n}) => {\n  const [name, setName] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  const goBack = () => React.createElement(\"div\", {\n    className: \"mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"btn btn-sm btn-success mb-3\",\n    to: \"/admin/comapny/dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Company Dashboard\"));\n\n  const handleChange = event => {\n    setError(\"\");\n    setName(event.target.value);\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setError(\"\");\n    setSuccess(false); //backend request fired\n    //     createCategory(user._id, token, { name }).then(data => {\n    //       if (data.error) {\n    //         setError(true);\n    //       } else {\n    //         setError(\"\");\n    //         setSuccess(true);\n    //         setName(\"\");\n    //       }\n    //     });\n  };\n\n  const successMessage = () => {\n    if (success) {\n      return React.createElement(\"h4\", {\n        className: \"text-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Production created successfully\");\n    }\n  };\n\n  const warningMessage = () => {\n    if (error) {\n      return React.createElement(\"h4\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Failed to Create Production\");\n    }\n  };\n\n  const addProductionForm = () => React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Enter the Production\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control my-3\",\n    onChange: handleChange,\n    value: name,\n    autoFocus: true,\n    required: true,\n    placeholder: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: onSubmit,\n    className: \"btn btn-outline-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Create Production\")));\n\n  return React.createElement(Base, {\n    title: \"Create a Production here\",\n    description: \"Add a new Production for the Company\",\n    className: \"container bg-info p-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row bg-white rounded\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-8 offset-md-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, successMessage(), warningMessage(), addProductionForm(), goBack())));\n};\n\nexport default AddProduction;","map":{"version":3,"sources":["/home/shebin/Desktop/allen/src/admin/AddProduction.js"],"names":["React","useState","Base","Link","AddProduction","match","name","setName","error","setError","success","setSuccess","goBack","handleChange","event","target","value","onSubmit","preventDefault","successMessage","warningMessage","addProductionForm"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAGA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;;AAGA,QAAMW,MAAM,GAAG,MACb;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,6BAAhB;AAA8C,IAAA,EAAE,EAAC,0BAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CADF;;AAQA,QAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5BL,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAF,IAAAA,OAAO,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD,GAHD;;AAKA,QAAMC,QAAQ,GAAGH,KAAK,IAAI;AACxBA,IAAAA,KAAK,CAACI,cAAN;AACAT,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,UAAU,CAAC,KAAD,CAAV,CAHwB,CAKxB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,GAfF;;AAiBA,QAAMQ,cAAc,GAAG,MAAM;AAC3B,QAAIT,OAAJ,EAAa;AACX,aAAO;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAAP;AACD;AACF,GAJD;;AAMA,QAAMU,cAAc,GAAG,MAAM;AAC3B,QAAIZ,KAAJ,EAAW;AACT,aAAO;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAP;AACD;AACF,GAJD;;AAMA,QAAMa,iBAAiB,GAAG,MACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,IAAA,QAAQ,EAAER,YAHZ;AAIE,IAAA,KAAK,EAAEP,IAJT;AAKE,IAAA,SAAS,MALX;AAME,IAAA,QAAQ,MANV;AAOE,IAAA,WAAW,EAAC,EAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAWE;AAAQ,IAAA,OAAO,EAAEW,QAAjB;AAA2B,IAAA,SAAS,EAAC,sBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAXF,CADF,CADF;;AAoBA,SACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAC,0BADR;AAEE,IAAA,WAAW,EAAC,sCAFd;AAGE,IAAA,SAAS,EAAC,uBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,cAAc,EADjB,EAEGC,cAAc,EAFjB,EAGGC,iBAAiB,EAHpB,EAIGT,MAAM,EAJT,CADF,CALF,CADF;AAgBD,CApFD;;AAsFA,eAAeR,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link } from \"react-router-dom\";\n\n\nconst AddProduction = ({match}) => {\n  const [name, setName] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n\n  const goBack = () => (\n    <div className=\"mt-5\">\n      <Link className=\"btn btn-sm btn-success mb-3\" to=\"/admin/comapny/dashboard\">\n        Company Dashboard\n      </Link>\n    </div>\n  );\n\n  const handleChange = event => {\n    setError(\"\");\n    setName(event.target.value);\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setError(\"\");\n    setSuccess(false);\n\n    //backend request fired\n//     createCategory(user._id, token, { name }).then(data => {\n//       if (data.error) {\n//         setError(true);\n//       } else {\n//         setError(\"\");\n//         setSuccess(true);\n//         setName(\"\");\n//       }\n//     });\n   };\n\n  const successMessage = () => {\n    if (success) {\n      return <h4 className=\"text-success\">Production created successfully</h4>;\n    }\n  };\n\n  const warningMessage = () => {\n    if (error) {\n      return <h4 className=\"text-danger\">Failed to Create Production</h4>;\n    }\n  };\n\n  const addProductionForm = () => (\n    <form>\n      <div className=\"form-group\">\n        <p className=\"lead\">Enter the Production</p>\n        <input\n          type=\"text\"\n          className=\"form-control my-3\"\n          onChange={handleChange}\n          value={name}\n          autoFocus\n          required\n          placeholder=\"\"\n        />\n        <button onClick={onSubmit} className=\"btn btn-outline-info\">\n          Create Production\n        </button>\n      </div>\n    </form>\n  );\n\n  return (\n    <Base\n      title=\"Create a Production here\"\n      description=\"Add a new Production for the Company\"\n      className=\"container bg-info p-4\"\n    >\n      <div className=\"row bg-white rounded\">\n        <div className=\"col-md-8 offset-md-2\">\n          {successMessage()}\n          {warningMessage()}\n          {addProductionForm()}\n          {goBack()}\n        </div>\n      </div>\n    </Base>\n  );\n};\n\nexport default AddProduction;"]},"metadata":{},"sourceType":"module"}